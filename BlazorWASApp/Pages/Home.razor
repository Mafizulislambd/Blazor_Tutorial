@page "/"
@using BlazorClassLibrary.shared.Models
@using BlazorClassLibrary.shared.Utilities
@using BlazorWASApp.Services
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Inputs
@* @{
    var intialGrouping = (new string[] { "Gender", "FirstName" });
} *@
@if (Employees == null)
{
    <h3>Loading Data...</h3>
}
else
{<div style="width:700px">
    
    <h3>All Employees</h3>
        <SfGrid @ref="@employeeGrid" DataSource="@Employees" AllowPaging="true">
@*             <GridPageSettings PageSize="5"></GridPageSettings>
 *@        <SfToolbar>
            <ToolbarItems>
                <ToolbarItem Type="ItemType.Input" Align="Syncfusion.Blazor.Navigations.ItemAlign.Right">
                    <Template>
                        <SfTextBox Placeholder="Search" Input="OnInput"></SfTextBox>
                    </Template>
                </ToolbarItem>
            </ToolbarItems>
        </SfToolbar>   
        <GridColumns>
                <GridColumn Field=@nameof(Employee.EmployeeId) HeaderText="ID"></GridColumn>
                <GridColumn Field=@nameof(Employee.FirstName) HeaderText="First Name"></GridColumn>
                <GridColumn Field=@nameof(Employee.LastName) HeaderText=" Last Name"></GridColumn>
                <GridColumn Field=@nameof(Employee.DateOfBrith) HeaderText="Date of Birth"></GridColumn>
                <GridColumn Field=@nameof(Employee.Gender) HeaderText="Gender"></GridColumn>
                <GridColumn Field=@nameof(Employee.Email) HeaderText="Email"></GridColumn>
            </GridColumns>
        </SfGrid>
    </div>
}

@code {
    public List<Employee> Employees { get; set; }
    public SfGrid<Employee> employeeGrid { get; set; }
    protected void GenderSelectionChange(ChangeEventArgs<string, DropDownListItem> args)
    {
        if (args.Value == "All")
        {
            employeeGrid.ClearFiltering("Gender");
        }
        else
        {
            employeeGrid.FilterByColumn("Gender", "equal", args.Value);
        }
    }
    List<DropDownListItem> genderDorpDownSource =
    EnumHelper.ConvertEnumToDropDownSource<Gender>("All", "All");
    //string fn = "fn";
    [Inject]
    public IEmployeeService EmployeeService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Employees = (await EmployeeService.GetAllEmployees()).ToList();
    }
    private async void OnInput(InputEventArgs args)
    {
        await this.employeeGrid.SearchAsync(args.Value);
    }
}