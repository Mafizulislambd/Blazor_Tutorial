@page "/"
@using BlazorClassLibrary.shared.Models
@using BlazorClassLibrary.shared.Utilities
@using BlazorWASApp.Services
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Data
@using Syncfusion.Blazor.DropDowns
@* @{
    var intialGrouping = (new string[] { "Gender", "FirstName" });
} *@
@if (Employees == null)
{
    <h3>Loading Data...</h3>
}
else
{<div style="width:700px">
    <h3>All Employees</h3>
 
  <div style="width:600px">
    <SfGrid @ref="employeeGrid" DataSource="@Employees" AllowPaging="true" AllowFiltering="true">
        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                <GridColumns>
                    <GridColumn Field=@nameof(Employee.EmployeeId) HeaderText="ID"
                                FilterSettings="@(new FilterSettings() { Type = Syncfusion.Blazor.Grids.FilterType.CheckBox })">
                    </GridColumn>
                    <GridColumn Field=@nameof(Employee.FirstName) HeaderText="First Name"></GridColumn>
                    <GridColumn Field=@nameof(Employee.LastName) HeaderText=" Last Name"
                                FilterSettings="@(new FilterSettings() { Type = Syncfusion.Blazor.Grids.FilterType.Excel })">
                    </GridColumn>
                    <GridColumn Field=@nameof(Employee.DateOfBrith) HeaderText="Date of Birth"></GridColumn>
                    <GridColumn Field=@nameof(Employee.Email) HeaderText="Email"></GridColumn>
                </GridColumns>
    </SfGrid>
</div>
    </div>
}

@code {
    public List<Employee> Employees { get; set; }
    public SfGrid<Employee> employeeGrid { get; set; }
    protected void GenderSelectionChange(ChangeEventArgs<string, DropDownListItem> args)
    {
        if (args.Value == "All")
        {
            employeeGrid.ClearFiltering("Gender");
        }
        else
        {
            employeeGrid.FilterByColumn("Gender", "equal", args.Value);
        }
    }
    List<DropDownListItem> genderDorpDownSource =
    EnumHelper.ConvertEnumToDropDownSource<Gender>("All", "All");
    //string fn = "fn";
    [Inject]
    public IEmployeeService EmployeeService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Employees = (await EmployeeService.GetAllEmployees()).ToList();
    }
}