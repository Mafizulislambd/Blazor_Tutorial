@page "/"
@using BlazorClassLibrary.shared.Models
@using BlazorWASApp.Services
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Data

@{
    var intialGrouping = (new string[] { "Gender", "FirstName" });
}
@if (Employees == null)
{
    <h3>Loading Data...</h3>
}
else
{<div style="width:700px">
    <h3>All Employees</h3>
 
    <SfGrid DataSource="@Employees"  AllowFiltering="true">
        <GridFilterSettings Mode="FilterBarMode.Immediate" ImmediateModeDelay="200">
          @*   <GridFilterColumns>
                <GridFilterColumn Field="EmployeeId" Operator="Operator.LessThanOrEqual" Value="10"></GridFilterColumn>
                <GridFilterColumn Field="FirstName" Operator="Operator.Contains" Value="@fn"></GridFilterColumn>
            </GridFilterColumns> *@
        </GridFilterSettings>
       
    @*     <GridGroupSettings Columns="@intialGrouping" ShowGroupedColumn="true" ShowUngroupButton="true" ShowToggleButton="true" ShowDropArea="false">
            <CaptionTemplate>
                @{
                    var employee = (context as CaptionTemplateContext);
                    <div>@employee.Field : @employee.Key - @employee.Count Employees</div>
                }
            </CaptionTemplate>
        </GridGroupSettings> *@

       @*  <GridGroupSettings>
            <CaptionTemplate>
                @{
                    var employee = (context as CaptionTemplateContext);
                    <div>@employee.Field : @employee.Key - @employee.Count Employees</div>
                }
            </CaptionTemplate>
        </GridGroupSettings> *@
        <GridColumns>
                <GridColumn Field=@nameof(Employee.EmployeeId) HeaderText="ID" FilterSettings="@(new FilterSettings() { Operator = Operator.LessThanOrEqual })"></GridColumn>
            <GridColumn AllowFiltering="false" Field=@nameof(Employee.FirstName) HeaderText="First Name"></GridColumn>
            <GridColumn Field=@nameof(Employee.LastName) HeaderText=" Last Name"></GridColumn>
            <GridColumn Field=@nameof(Employee.Gender) HeaderText="Gender"></GridColumn>
        </GridColumns>
    </SfGrid>
    </div>
}

@code {
    public List<Employee> Employees { get; set; }
    string fn = "fn";
    [Inject]
    public IEmployeeService EmployeeService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Employees = (await EmployeeService.GetAllEmployees()).ToList();
    }
}